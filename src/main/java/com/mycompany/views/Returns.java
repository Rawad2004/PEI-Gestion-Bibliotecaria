/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.interfaces.DAOBooks;
import com.mycompany.interfaces.DAOLendings;
import com.mycompany.interfaces.DAOUsers;
import com.mycompany.pei.sbibliotecario.DAOBooksImpl;
import com.mycompany.pei.sbibliotecario.DAOLendingsImpl;
import com.mycompany.pei.sbibliotecario.DAOusersImpl;
import com.mycompany.utils.Utils;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Date;
import javax.swing.JTextField;

/**
 *
 * @author Rawad
 */
public class Returns extends javax.swing.JPanel {

    private final int MAX_DAYS_RETURN = 5;
    private final int COST_DAY_SANC = 10;
    
    public Returns() {
        initComponents();
        InitStyles();

    }

    private void InitStyles() {
        folioTxt.putClientProperty("JTextField.placeholderText", "Ingrese la identificacion del usuario.");
        folioTxt.setPlaceholderColor(new Color(183, 183, 183));

        libroIdTxt.putClientProperty("JTextField.placeholderText", "Ingrese el ID del libro.");
        libroIdTxt.setPlaceholderColor(new Color(183, 183, 183));

        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                requestFocus(); // Fuerza el foco al frame principal
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        Welcome = new javax.swing.JLabel();
        Text = new com.mycompany.components.PanelRound();
        jLabel2 = new javax.swing.JLabel();
        folioTxt = new com.mycompany.components.RoundedTextField();
        jLabel3 = new javax.swing.JLabel();
        libroIdTxt = new com.mycompany.components.RoundedTextField();
        BtnLend = new com.mycompany.components.ButtonUse();

        setBackground(new Color(0,0,0,0));
        setMinimumSize(new java.awt.Dimension(774, 612));
        setPreferredSize(new java.awt.Dimension(774, 612));

        bg.setBackground(new java.awt.Color(255, 255, 255,0));
        bg.setMinimumSize(new java.awt.Dimension(774, 612));
        bg.setPreferredSize(new java.awt.Dimension(774, 612));

        Welcome.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        Welcome.setForeground(new java.awt.Color(30, 30, 30));
        Welcome.setText("Devolucion");

        Text.setBackground(new java.awt.Color(249, 249, 249));
        Text.setForeground(new java.awt.Color(10, 10, 10));
        Text.setRoundBottomLeft(35);
        Text.setRoundBottomRight(35);
        Text.setRoundTopLeft(35);
        Text.setRoundTopRight(35);

        jLabel2.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(10, 10, 10));
        jLabel2.setText("Identificacion Usuario");

        folioTxt.setBackground(new Color(255,255,255,0));
        folioTxt.setForeground(new java.awt.Color(10, 10, 10));
        folioTxt.setBorderRadius(40);
        folioTxt.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(10, 10, 10));
        jLabel3.setText("ID Libro");

        libroIdTxt.setBackground(new Color(255,255,255,0));
        libroIdTxt.setForeground(new java.awt.Color(10, 10, 10));
        libroIdTxt.setBorderRadius(40);
        libroIdTxt.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N

        BtnLend.setForeground(new java.awt.Color(253, 253, 253));
        BtnLend.setText("Devolver");
        BtnLend.setBorderPainted(false);
        BtnLend.setColorClick(new java.awt.Color(42, 42, 42));
        BtnLend.setColorOver(new java.awt.Color(42, 42, 42));
        BtnLend.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        BtnLend.setRadius(40);
        BtnLend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TextLayout = new javax.swing.GroupLayout(Text);
        Text.setLayout(TextLayout);
        TextLayout.setHorizontalGroup(
            TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(libroIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(folioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TextLayout.setVerticalGroup(
            TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(folioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(libroIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(BtnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(Welcome, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                        .addGap(68, 68, 68))
                    .addComponent(Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(Welcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLendActionPerformed
        String folio = folioTxt.getText();
        String bookId = libroIdTxt.getText();

        // Validaciones para los campos
        if (folio.isEmpty() || bookId.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        } else if (!Utils.isNumeric(folio) || !Utils.isNumeric(bookId)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Identificacion y el ID del libro deben ser n√∫meros enteros. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        } else if (Integer.parseInt(folio) <= 0 || Integer.parseInt(bookId) <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Identificacion y el ID del libro deben ser mayor que 0. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        }

        try {
            DAOUsers daoUsers = new DAOusersImpl();

            // Validamos existencia del usuario
            com.mycompany.models.Users currentUser = daoUsers.getUserById(Integer.parseInt(folio));
            if (currentUser == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontr√≥ ning√∫n usuario con esa identificacion. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                folioTxt.requestFocus();
                return;
            }

            DAOBooks daoBooks = new DAOBooksImpl();

            // Validamos existencia del libro
            com.mycompany.models.Books currentBook = daoBooks.getBookById(Integer.parseInt(bookId));
            if (currentBook == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontr√≥ ning√∫n libro con ese ID. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                libroIdTxt.requestFocus();
                return;
            }

            DAOLendings daoLendings = new DAOLendingsImpl();

            // Validamos que el usuario tenga ese libro prestado.
            com.mycompany.models.Lendings currentLending = daoLendings.getLending(currentUser, currentBook);
            if (currentLending == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se ha podido encontrar el pr√©stamo correspiendote a los datos ingresados. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                libroIdTxt.requestFocus();
                return;
            }

            // Todo OK: Devolvemos libro.
            currentLending.setDate_return(Utils.getFechaActual());
            daoLendings.modificar(currentLending);

            // Modificamos el libro sumandole 1 en disponibilidad.
            currentBook.setAvailable(currentBook.getAvailable() + 1);
            daoBooks.modificar(currentBook);

            javax.swing.JOptionPane.showMessageDialog(this, "Libro ID: " + currentBook.getId() + " devuelto exitosamente por " + currentUser.getName() + ".\n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            folioTxt.setText("");
            libroIdTxt.setText("");

            // Verificamos sanciones
            int days = Utils.diferenciasDeFechas(Utils.stringToDate(currentLending.getDate_out()), new Date());
            if (days > MAX_DAYS_RETURN) {
                int daysDelayed = days - MAX_DAYS_RETURN;
                int sancMoney = daysDelayed * COST_DAY_SANC;

                // Aumentamos sanci√≥n del usuario y en dinero.
                currentUser.setSanctions(currentUser.getSanctions() + 1);
                currentUser.setSanc_money(currentUser.getSanc_money() + sancMoney);
                daoUsers.sancionar(currentUser);
                javax.swing.JOptionPane.showMessageDialog(this, "¬°USUARIO SANCIONADO POR ENTREGA A DESTIEMPO! ($" + sancMoney + ") \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error al prestar el libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_BtnLendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mycompany.components.ButtonUse BtnLend;
    private com.mycompany.components.PanelRound Text;
    private javax.swing.JLabel Welcome;
    private javax.swing.JPanel bg;
    private com.mycompany.components.RoundedTextField folioTxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.mycompany.components.RoundedTextField libroIdTxt;
    // End of variables declaration//GEN-END:variables
}
