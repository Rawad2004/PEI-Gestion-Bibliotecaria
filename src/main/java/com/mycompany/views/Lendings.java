/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.interfaces.DAOBooks;
import com.mycompany.interfaces.DAOLendings;
import com.mycompany.interfaces.DAOUsers;
import com.mycompany.pei.sbibliotecario.DAOBooksImpl;
import com.mycompany.pei.sbibliotecario.DAOLendingsImpl;
import com.mycompany.pei.sbibliotecario.DAOusersImpl;
import com.mycompany.utils.SendEmail;
import com.mycompany.utils.Utils;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.JTextField;

/**
 *
 * @author Rawad
 */
public class Lendings extends javax.swing.JPanel {

    private final int MAX_DAYS_RETURN = 15;

    public Lendings() {
        initComponents();
        InitStyles();

    }

    private void InitStyles() {
        folioTxt.putClientProperty("JTextField.placeholderText", "Ingrese la identificacion del usuario.");
        folioTxt.setPlaceholderColor(new Color(183, 183, 183));

        libroIdTxt.putClientProperty("JTextField.placeholderText", "Ingrese el ID del libro.");
        libroIdTxt.setPlaceholderColor(new Color(183, 183, 183));

        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                requestFocus(); // Fuerza el foco al frame principal
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        Welcome = new javax.swing.JLabel();
        Text = new com.mycompany.components.PanelRound();
        jLabel2 = new javax.swing.JLabel();
        folioTxt = new com.mycompany.components.RoundedTextField();
        jLabel3 = new javax.swing.JLabel();
        libroIdTxt = new com.mycompany.components.RoundedTextField();
        BtnLend = new com.mycompany.components.ButtonUse();

        setBackground(new Color(0,0,0,0));
        setMinimumSize(new java.awt.Dimension(774, 612));
        setPreferredSize(new java.awt.Dimension(774, 612));

        bg.setBackground(new java.awt.Color(255, 255, 255,0));
        bg.setMinimumSize(new java.awt.Dimension(774, 612));
        bg.setPreferredSize(new java.awt.Dimension(774, 612));

        Welcome.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        Welcome.setForeground(new java.awt.Color(30, 30, 30));
        Welcome.setText("Nuevo Prestamo");

        Text.setBackground(new java.awt.Color(249, 249, 249));
        Text.setForeground(new java.awt.Color(10, 10, 10));
        Text.setRoundBottomLeft(35);
        Text.setRoundBottomRight(35);
        Text.setRoundTopLeft(35);
        Text.setRoundTopRight(35);

        jLabel2.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(10, 10, 10));
        jLabel2.setText("Identificacion Usuario");

        folioTxt.setBackground(new Color(255,255,255,0));
        folioTxt.setForeground(new java.awt.Color(10, 10, 10));
        folioTxt.setBorderRadius(40);
        folioTxt.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        folioTxt.setMinimumSize(new java.awt.Dimension(645, 45));
        folioTxt.setPreferredSize(new java.awt.Dimension(645, 45));

        jLabel3.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(10, 10, 10));
        jLabel3.setText("ID Libro");

        libroIdTxt.setBackground(new Color(255,255,255,0));
        libroIdTxt.setForeground(new java.awt.Color(10, 10, 10));
        libroIdTxt.setBorderRadius(40);
        libroIdTxt.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N

        BtnLend.setForeground(new java.awt.Color(253, 253, 253));
        BtnLend.setText("Prestar");
        BtnLend.setColorClick(new java.awt.Color(42, 42, 42));
        BtnLend.setColorOver(new java.awt.Color(42, 42, 42));
        BtnLend.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        BtnLend.setRadius(40);
        BtnLend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TextLayout = new javax.swing.GroupLayout(Text);
        Text.setLayout(TextLayout);
        TextLayout.setHorizontalGroup(
            TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(libroIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(folioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TextLayout.setVerticalGroup(
            TextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(folioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(libroIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(BtnLend, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(Welcome, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                        .addGap(68, 68, 68))
                    .addComponent(Text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(Welcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLendActionPerformed
        String folio = folioTxt.getText();
        String bookId = libroIdTxt.getText();

        // Validaciones para los campos
        if (folio.isEmpty() || bookId.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        } else if (!Utils.isNumeric(folio) || !Utils.isNumeric(bookId)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Identificacion y el ID del libro deben ser n√∫meros enteros. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        } else if (Integer.parseInt(folio) <= 0 || Integer.parseInt(bookId) <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Los campos Identificacion y el ID del libro deben ser mayor que 0. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            folioTxt.requestFocus();
            return;
        }

        try {
            DAOUsers daoUsers = new DAOusersImpl();

            // Validamos existencia del usuario
            com.mycompany.models.Users currentUser = daoUsers.getUserById(Integer.parseInt(folio));
            if (currentUser == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontr√≥ ning√∫n usuario con es identificacion. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                folioTxt.requestFocus();
                return;
            }

            System.out.println("Email: " + currentUser.getEmail());
            System.out.println("Nombre: " + currentUser.getName());
            System.out.println("Apellido Paterno: " + currentUser.getLast_name_p());
            System.out.println("Apellido Materno: " + currentUser.getLast_name_m());

            DAOBooks daoBooks = new DAOBooksImpl();

            // Validamos existencia del libro
            com.mycompany.models.Books currentBook = daoBooks.getBookById(Integer.parseInt(bookId));
            if (currentBook == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "No se encontr√≥ ning√∫n libro con ese ID. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                libroIdTxt.requestFocus();
                return;
            } // Validamos disponibilidad del libro.
            else if (currentBook.getAvailable() < 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ya no hay m√°s libros disponibles con esa ID para prestar. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                libroIdTxt.requestFocus();
                return;
            }

            DAOLendings daoLendings = new DAOLendingsImpl();

            // Validamos que el usuario no tenga ya ese libro prestado.
            com.mycompany.models.Lendings currentLending = daoLendings.getLending(currentUser, currentBook);
            if (currentLending != null) {
                javax.swing.JOptionPane.showMessageDialog(this, "Esa persona ya cuenta con el pr√©stamo de ese mismo Libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
                libroIdTxt.requestFocus();
                return;
            }

            com.mycompany.models.Lendings lending = new com.mycompany.models.Lendings();
            lending.setBook_id(currentBook.getId());
            lending.setUser_id(currentUser.getId());
            lending.setDate_out(Utils.getFechaActual());
            daoLendings.registrar(lending);

            // Modificamos el libro restandole 1 en disponibilidad.
            currentBook.setAvailable(currentBook.getAvailable() - 1);
            daoBooks.modificar(currentBook);

            folioTxt.setText("");
            libroIdTxt.setText("");

            javax.swing.JOptionPane.showMessageDialog(this, "Libro ID: " + currentBook.getId() + " prestado exitosamente a " + currentUser.getName() + ".\n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            try {

                SendEmail enviarCorreo = new SendEmail();
                String emailDestino = currentUser.getEmail();
                String nombreUsuario = currentUser.getName() + " " + currentUser.getLast_name_p() + " " + currentUser.getLast_name_p();
                int idLibro = currentBook.getId();
                String nameLibro = currentBook.getTitle();
                Calendar calendar = Calendar.getInstance();
                calendar.add(Calendar.DAY_OF_YEAR, 15);
                Date fechaMas15Dias = calendar.getTime();
                SimpleDateFormat sdf = new SimpleDateFormat("dd MMMM yyyy", new Locale("es", "ES"));
                String fechaDevo = sdf.format(fechaMas15Dias);

                String asunto = String.format("üìö Pr√©stamo registrado - %s (ID: %d)", nameLibro, idLibro);

                String contenidoHTML = String.format("""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <style>
                body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px; }
                .header { background-color: #4285F4; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
                .header h1 { color: white; margin: 0; }
                .content { padding: 20px; }
                .book-info { background: #f9f9f9; padding: 15px; border-left: 4px solid #4285F4; margin: 20px 0; }
                .button { 
                    display: inline-block;
                    background-color: #4285F4;
                    color: white !important;
                    padding: 12px 24px;
                    text-decoration: none;
                    border-radius: 4px;
                    font-weight: bold;
                }
                .footer { 
                    margin-top: 20px; 
                    padding-top: 20px; 
                    border-top: 1px solid #e0e0e0; 
                    font-size: 12px; 
                    color: #777; 
                }
                .deadline { color: #d32f2f; font-weight: bold; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>Bookly - Pr√©stamo Registrado</h1>
                </div>
                <div class="content">
                    <h2>¬°Hola, %s!</h2>
                    <p>Has realizado un pr√©stamo en nuestro sistema. Aqu√≠ los detalles:</p>
                    
                    <div class="book-info">
                        <h3>%s</h3>
                        <p><strong>ID del libro:</strong> %d</p>
                        <p><strong>Fecha m√°xima de devoluci√≥n:</strong> <span class="deadline">%s</span></p>
                    </div>
                    
                    
                    <p>Si ya devolviste el libro, por favor ignora este mensaje.</p>
                </div>
                <div class="footer">
                    <p>¬© %d Bookly - Sistema de Gesti√≥n de Bibliotecas</p>
                    <p>Este es un correo autom√°tico, por favor no lo respondas directamente.</p>
                </div>
            </div>
        </body>
        </html>
        """,
                        nombreUsuario,
                        nameLibro,
                        idLibro,
                        fechaDevo,
                        java.time.Year.now().getValue());

                enviarCorreo.enviarCorreo(emailDestino, asunto, contenidoHTML);
                System.out.println("Correo de registro enviado exitosamente");
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error al prestar el libro. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_BtnLendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mycompany.components.ButtonUse BtnLend;
    private com.mycompany.components.PanelRound Text;
    private javax.swing.JLabel Welcome;
    private javax.swing.JPanel bg;
    private com.mycompany.components.RoundedTextField folioTxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.mycompany.components.RoundedTextField libroIdTxt;
    // End of variables declaration//GEN-END:variables
}
